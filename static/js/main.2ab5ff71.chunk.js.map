{"version":3,"sources":["Header.js","ObraLeilao.js","Leilao.js","Detalhes.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","Component","ObraLeilao","props","titulo","id","Leilao","state","times","loadtimes","a","navigator","onLine","firebase","collection","orderBy","onSnapshot","snapshot","docChanges","forEach","change","type","push","doc","data","map","obra","filter","setState","localStorage","setItem","JSON","stringify","parse","getItem","dados","this","time","key","nome","Detalhes","autor","descricao","minimo","foto","lance_nome","lance_email","lance_fone","lance_valor","aviso","partidas","handleChange","e","target","name","value","handleSubmit","preventDefault","lance","email","fone","valor","db","add","erro","tempoAviso","setTimeout","loadpartidas","params","match","get","then","exists","console","log","catch","error","partida","onSubmit","placeholder","onChange","App","path","exact","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2ab5ff71.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm bg-success navbar-dark\">\r\n         <Link className=\"navbar-brand\" to=\"/\">Resultados da Rodada</Link>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ObraLeilao = props => (\r\n  <div className=\"card\">\r\n    <div className=\"card-body\">\r\n      <h4 className=\"card-title\">{props.titulo}</h4>\r\n      <Link to={`/detalhes/${props.id}`} className=\"btn btn-danger btn-block\">Ver Detalhes</Link>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default ObraLeilao","import React, { Component } from 'react'\r\n\r\nimport * as firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nimport ObraLeilao from './ObraLeilao'\r\n\r\nexport default class Leilao extends Component {\r\n\r\n  state = {\r\n    times: []\r\n  }\r\n\r\n  // método acionado logo após a construção da view\r\n  componentDidMount() {\r\n    this.loadtimes()\r\n  }\r\n\r\n  \r\n\r\n  loadtimes = async () => {\r\n    let times = []\r\n\r\n    if (navigator.onLine) {\r\n    firebase.firestore().collection('times').orderBy('nome').onSnapshot(snapshot => {\r\n\r\n      snapshot.docChanges().forEach(change => {\r\n\r\n        if (change.type === \"added\") {\r\n          times.push({ id: change.doc.id, ...change.doc.data() })\r\n        }\r\n\r\n        if (change.type === \"modified\") {\r\n          times = times.map(obra => obra.id === change.doc.id ?\r\n            { id: change.doc.id, ...change.doc.data() }\r\n            : obra)\r\n        }\r\n\r\n        if (change.type === \"removed\") {\r\n          times = times.filter(obra => obra.id !== change.doc.id)\r\n        }\r\n      })\r\n      this.setState({ times })\r\n      localStorage.setItem('times', JSON.stringify(times))\r\n    })\r\n  } else {\r\n    let dados = await JSON.parse(localStorage.getItem('times')) || []\r\n    times = dados\r\n    this.setState({ times })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-2\">\r\n        <div className='card-columns'>\r\n          {this.state.times.map(time => (\r\n            <ObraLeilao key={time.id}\r\n              id={time.id}\r\n              titulo={time.nome}\r\n               />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport * as firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nexport default class Detalhes extends Component {\r\n\r\n  state = {\r\n    id: '',\r\n    nome: '',\r\n    autor: '',\r\n    descricao: '',\r\n    minimo: 0,\r\n    foto: '',\r\n    lance_nome: '',\r\n    lance_email: '',\r\n    lance_fone: '',\r\n    lance_valor: '',\r\n    aviso: '',\r\n    partidas: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    // obtém os parâmetros passados para a classe\r\n    const { match: { params } } = this.props\r\n\r\n    const db = firebase.firestore()\r\n\r\n    var docRef = db.collection(\"times\").doc(params.id);\r\n\r\n    docRef.get().then(doc => {\r\n      if (doc.exists) {\r\n        this.setState({ id: doc.id, ...doc.data() })\r\n      } else {\r\n        // doc.data() will be undefined in this case\r\n        console.log(\"Erro...\");\r\n      }\r\n    }).catch(function (error) {\r\n      console.log(\"Erro de conexão: \", error);\r\n    });\r\n\r\n    this.loadpartidas()\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault()\r\n\r\n    const lance = {\r\n      nome: this.state.lance_nome,\r\n      email: this.state.lance_email,\r\n      fone: this.state.lance_fone,\r\n      valor: this.state.lance_valor\r\n    }\r\n\r\n    const db = firebase.firestore()\r\n\r\n    try {\r\n      db.collection('times').doc(this.state.id)\r\n        .collection('partidas').add(lance)\r\n      this.setState({ aviso: 'Ok! Resultado Salvo Com Sucesso' })\r\n    } catch (erro) {\r\n      this.setState({ aviso: 'Erro: ' + erro })\r\n    }\r\n    this.tempoAviso()\r\n  }\r\n\r\n  tempoAviso = () => {\r\n    setTimeout(() => {\r\n      this.setState({ aviso: '' })\r\n    }, 5000)\r\n  }\r\n\r\n  loadpartidas = () => {\r\n    const { match: { params } } = this.props\r\n\r\n    let partidas = []\r\n\r\n    firebase.firestore().collection('times')\r\n      .doc(params.id)\r\n      .collection('partidas')\r\n      .orderBy('nome')\r\n      .onSnapshot(snapshot => {\r\n\r\n        snapshot.docChanges().forEach(change => {\r\n\r\n          if (change.type === 'added') {\r\n            partidas.push({ id: change.doc.id, ...change.doc.data() })\r\n          }\r\n\r\n          if (change.type === 'modified') {\r\n            partidas = partidas.map(times => times.id === change.doc.id ?\r\n              { id: change.doc.id, ...change.doc.data() }\r\n              : times)\r\n          }\r\n\r\n          if (change.type === 'removed') {\r\n            partidas = partidas.filter(times => times.id !== change.doc.id)\r\n          }\r\n        })\r\n        this.setState({ partidas })\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-6 mt-2\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4 className=\"card-title\">\r\n                  {this.state.nome}</h4>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {\r\n                this.state.partidas.map(partida => {\r\n                  return <div className='col s12' key={partida.id}>\r\n                    <div className='card'>\r\n                      <div className='card-content'>\r\n                        <div className='row'>\r\n                          <div className='col s10'>\r\n                            <span className='card-title left-align'>{partida.nome}</span>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6 mt-2\">\r\n            <button className=\"btn btn-danger btn-lg btn-block\">\r\n              Adicione o Resultado do Jogo</button>\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <p className=\"card-text\">\r\n                  * Os Valores dos Jogos São Atualizados ao Final da Rodada\r\n                </p>\r\n                <form onSubmit={this.handleSubmit}>\r\n                  <div className=\"input-group mt-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span className=\"input-group-text\">\r\n                        <i className=\"far fa-user\"></i>\r\n                      </span>\r\n                    </div>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                      placeholder=\"Adicione o Resultado do Jogo\"\r\n                      name=\"lance_nome\"\r\n                      onChange={this.handleChange}\r\n                      value={this.state.lance_nome}\r\n                    />\r\n                  </div>\r\n                  <div className=\"input-group mt-3\">\r\n                  </div>\r\n\r\n                  <div className=\"input-group mt-3\">\r\n                  </div>\r\n\r\n                  <input type=\"submit\" className=\"btn btn-danger float-right mt-3\"\r\n                    value=\"Enviar Resultado\" />\r\n                  <Link to={'/'} className=\"btn btn-success float-left mt-3\">\r\n                    Voltar\r\n                  </Link>\r\n                </form>\r\n              </div>\r\n            </div>\r\n            {this.state.aviso !== '' ?\r\n              <div className='alert alert-info mt-3'>\r\n                {this.state.aviso}\r\n              </div>\r\n              : ''\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\nimport Header from './Header'\nimport Leilao from './Leilao'\nimport Detalhes from './Detalhes'\n\nfunction App() {\n  return (\n    <Router>\n      <Header/>\n        <Route path=\"/\" exact component={Leilao} />\n        <Route path=\"/detalhes/:id\" component={Detalhes} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/custom-service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDZzKxlWOGZnOu6B85ZL-17EWq0DeOYMPo\",\n  authDomain: \"trabalhoedecio2.firebaseapp.com\",\n  databaseURL: \"https://trabalhoedecio2.firebaseio.com\",\n  projectId: \"trabalhoedecio2\",\n  storageBucket: \"trabalhoedecio2.appspot.com\",\n  messagingSenderId: \"274761494120\",\n  appId: \"1:274761494120:web:fd4ef898bc9cb4fd7095dd\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();"],"sourceRoot":""}